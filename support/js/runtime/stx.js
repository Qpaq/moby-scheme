// This is automatically generated by bootstrap-js-compiler.ss
// Please don't hand-edit this file.
(function(_that) {var _SHARED = {};
var stx_colon_atom = function (datum,loc) { plt.types.Struct.call(this, "make-stx:atom", [datum,loc]);this.datum = datum;
this.loc = loc; };
stx_colon_atom.prototype = new plt.types.Struct();

var make_dash_stx_colon_atom = function (id0,id1) { return new stx_colon_atom(id0,id1); };
var stx_colon_atom_dash_datum = function(obj) {
     if (stx_colon_atom_question_ (obj)) {
        return obj.datum;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('stx:atom-datum: not a stx:atom: ~s', [obj]));
     }
};

var stx_colon_atom_dash_loc = function(obj) {
     if (stx_colon_atom_question_ (obj)) {
        return obj.loc;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('stx:atom-loc: not a stx:atom: ~s', [obj]));
     }
};

var set_dash_stx_colon_atom_dash_datum_bang_ = function(obj,newVal) {
	 if (stx_colon_atom_question_ (obj)) {
		obj.datum = newVal;
           obj._fields[0] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_stx_colon_atom_dash_datum_bang_: not a stx:atom: ~s', [obj]));
     }
};

var set_dash_stx_colon_atom_dash_loc_bang_ = function(obj,newVal) {
	 if (stx_colon_atom_question_ (obj)) {
		obj.loc = newVal;
           obj._fields[1] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_stx_colon_atom_dash_loc_bang_: not a stx:atom: ~s', [obj]));
     }
};

var stx_colon_atom_question_ = function(obj) { 
              return obj != null && obj != undefined && obj instanceof stx_colon_atom; };

var stx_colon_list = function (elts,loc) { plt.types.Struct.call(this, "make-stx:list", [elts,loc]);this.elts = elts;
this.loc = loc; };
stx_colon_list.prototype = new plt.types.Struct();

var make_dash_stx_colon_list = function (id0,id1) { return new stx_colon_list(id0,id1); };
var stx_colon_list_dash_elts = function(obj) {
     if (stx_colon_list_question_ (obj)) {
        return obj.elts;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('stx:list-elts: not a stx:list: ~s', [obj]));
     }
};

var stx_colon_list_dash_loc = function(obj) {
     if (stx_colon_list_question_ (obj)) {
        return obj.loc;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('stx:list-loc: not a stx:list: ~s', [obj]));
     }
};

var set_dash_stx_colon_list_dash_elts_bang_ = function(obj,newVal) {
	 if (stx_colon_list_question_ (obj)) {
		obj.elts = newVal;
           obj._fields[0] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_stx_colon_list_dash_elts_bang_: not a stx:list: ~s', [obj]));
     }
};

var set_dash_stx_colon_list_dash_loc_bang_ = function(obj,newVal) {
	 if (stx_colon_list_question_ (obj)) {
		obj.loc = newVal;
           obj._fields[1] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_stx_colon_list_dash_loc_bang_: not a stx:list: ~s', [obj]));
     }
};

var stx_colon_list_question_ = function(obj) { 
              return obj != null && obj != undefined && obj instanceof stx_colon_list; };

var Loc = function (offset,line,column,span,id) { plt.types.Struct.call(this, "make-Loc", [offset,line,column,span,id]);this.offset = offset;
this.line = line;
this.column = column;
this.span = span;
this.id = id; };
Loc.prototype = new plt.types.Struct();

var make_dash_Loc = function (id0,id1,id2,id3,id4) { return new Loc(id0,id1,id2,id3,id4); };
var Loc_dash_offset = function(obj) {
     if (Loc_question_ (obj)) {
        return obj.offset;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('Loc-offset: not a Loc: ~s', [obj]));
     }
};

var Loc_dash_line = function(obj) {
     if (Loc_question_ (obj)) {
        return obj.line;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('Loc-line: not a Loc: ~s', [obj]));
     }
};

var Loc_dash_column = function(obj) {
     if (Loc_question_ (obj)) {
        return obj.column;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('Loc-column: not a Loc: ~s', [obj]));
     }
};

var Loc_dash_span = function(obj) {
     if (Loc_question_ (obj)) {
        return obj.span;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('Loc-span: not a Loc: ~s', [obj]));
     }
};

var Loc_dash_id = function(obj) {
     if (Loc_question_ (obj)) {
        return obj.id;
     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('Loc-id: not a Loc: ~s', [obj]));
     }
};

var set_dash_Loc_dash_offset_bang_ = function(obj,newVal) {
	 if (Loc_question_ (obj)) {
		obj.offset = newVal;
           obj._fields[0] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_Loc_dash_offset_bang_: not a Loc: ~s', [obj]));
     }
};

var set_dash_Loc_dash_line_bang_ = function(obj,newVal) {
	 if (Loc_question_ (obj)) {
		obj.line = newVal;
           obj._fields[1] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_Loc_dash_line_bang_: not a Loc: ~s', [obj]));
     }
};

var set_dash_Loc_dash_column_bang_ = function(obj,newVal) {
	 if (Loc_question_ (obj)) {
		obj.column = newVal;
           obj._fields[2] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_Loc_dash_column_bang_: not a Loc: ~s', [obj]));
     }
};

var set_dash_Loc_dash_span_bang_ = function(obj,newVal) {
	 if (Loc_question_ (obj)) {
		obj.span = newVal;
           obj._fields[3] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_Loc_dash_span_bang_: not a Loc: ~s', [obj]));
     }
};

var set_dash_Loc_dash_id_bang_ = function(obj,newVal) {
	 if (Loc_question_ (obj)) {
		obj.id = newVal;
           obj._fields[4] = newVal;     } else {
        throw new plt.Kernel.MobyRuntimeError(            plt.Kernel.format('set_dash_Loc_dash_id_bang_: not a Loc: ~s', [obj]));
     }
};

var Loc_question_ = function(obj) { 
              return obj != null && obj != undefined && obj instanceof Loc; };

var stx_question_ = function(x) { return (stx_colon_atom_question_(x)||stx_colon_list_question_(x)); };
var stx_dash_e = function(a_dash_stx) { return (stx_colon_atom_question_(a_dash_stx) ?
 stx_colon_atom_dash_datum(a_dash_stx) :
 (stx_colon_list_question_(a_dash_stx) ?
 stx_colon_list_dash_elts(a_dash_stx) :
 plt.Kernel.error((plt.types.Symbol.makeInstance("cond")),_SHARED[4]))); };
var stx_dash_loc = function(a_dash_stx) { return (stx_colon_atom_question_(a_dash_stx) ?
 stx_colon_atom_dash_loc(a_dash_stx) :
 (stx_colon_list_question_(a_dash_stx) ?
 stx_colon_list_dash_loc(a_dash_stx) :
 plt.Kernel.error((plt.types.Symbol.makeInstance("cond")),_SHARED[4]))); };
var stx_dash_begins_dash_with_question_ = function(a_dash_stx, a_dash_sym) { return (stx_colon_atom_question_(a_dash_stx) ?
 _SHARED[5] :
 (stx_colon_list_question_(a_dash_stx) ?
 (plt.Kernel.not(plt.Kernel.empty_question_(stx_colon_list_dash_elts(a_dash_stx)))&&plt.Kernel.symbol_question_(stx_dash_e(plt.Kernel.first(stx_colon_list_dash_elts(a_dash_stx))))&&plt.Kernel.symbol_equal__question_(stx_dash_e(plt.Kernel.first(stx_colon_list_dash_elts(a_dash_stx))),a_dash_sym)) :
 plt.Kernel.error((plt.types.Symbol.makeInstance("cond")),_SHARED[4]))); };
var datum_dash__greaterthan_stx = function(a_dash_datum, a_dash_loc) { return (stx_question_(a_dash_datum) ?
 a_dash_datum :
 ((plt.Kernel.pair_question_(a_dash_datum)||plt.Kernel.empty_question_(a_dash_datum)) ?
 make_dash_stx_colon_list(plt.Kernel.map(((function() {
   var _result_ = (function(args6) {
var x = args6[0];  return datum_dash__greaterthan_stx(x,a_dash_loc); });_result_._eqHashCode = plt.types.makeEqHashCode();_result_.toWrittenString = function (cache) { return '<function:lambda>'; };_result_.isEqual = function(other, cache) { return this === other; };_result_.procedureArity = (plt.types.Rational.makeInstance(1, 1));_result_.toDisplayedString = _result_.toWrittenString;return _result_;  })()), [a_dash_datum]),a_dash_loc) :
 (plt.types.Logic.TRUE ?
 make_dash_stx_colon_atom(a_dash_datum,a_dash_loc) :
 plt.Kernel.error((plt.types.Symbol.makeInstance("cond")),_SHARED[4])))); };
var stx_dash__greaterthan_datum = function(a_dash_stx) { return (stx_colon_atom_question_(a_dash_stx) ?
 stx_colon_atom_dash_datum(a_dash_stx) :
 (stx_colon_list_question_(a_dash_stx) ?
 plt.Kernel.map((plt.types.liftToplevelToFunctionValue(stx_dash__greaterthan_datum,(plt.types.String.makeInstance("stx->datum")),1,(plt.types.Rational.makeInstance(1, 1)))), [stx_colon_list_dash_elts(a_dash_stx)]) :
 plt.Kernel.error((plt.types.Symbol.makeInstance("cond")),_SHARED[4]))); };_SHARED[4] = (plt.types.String.makeInstance("cond: fell out of cond"));
_SHARED[5] = plt.types.Logic.FALSE;

(function() { 
  ((function (toplevel_dash_expression_dash_show0) { 








 })  )(arguments[0] || plt.Kernel.identity);
_that["stx_dash_e"] = stx_dash_e;
_that["stx_colon_list"] = stx_colon_list;
_that["make_dash_stx_colon_list"] = make_dash_stx_colon_list;
_that["stx_colon_list_question_"] = stx_colon_list_question_;
_that["stx_colon_list_dash_elts"] = stx_colon_list_dash_elts;
_that["stx_colon_list_dash_loc"] = stx_colon_list_dash_loc;
_that["set_dash_stx_colon_list_dash_elts_bang_"] = set_dash_stx_colon_list_dash_elts_bang_;
_that["set_dash_stx_colon_list_dash_loc_bang_"] = set_dash_stx_colon_list_dash_loc_bang_;
_that["stx_question_"] = stx_question_;
_that["stx_colon_atom"] = stx_colon_atom;
_that["make_dash_stx_colon_atom"] = make_dash_stx_colon_atom;
_that["stx_colon_atom_question_"] = stx_colon_atom_question_;
_that["stx_colon_atom_dash_datum"] = stx_colon_atom_dash_datum;
_that["stx_colon_atom_dash_loc"] = stx_colon_atom_dash_loc;
_that["set_dash_stx_colon_atom_dash_datum_bang_"] = set_dash_stx_colon_atom_dash_datum_bang_;
_that["set_dash_stx_colon_atom_dash_loc_bang_"] = set_dash_stx_colon_atom_dash_loc_bang_;
_that["stx_dash_loc"] = stx_dash_loc;
_that["datum_dash__greaterthan_stx"] = datum_dash__greaterthan_stx;
_that["stx_dash_begins_dash_with_question_"] = stx_dash_begins_dash_with_question_;
_that["stx_dash__greaterthan_datum"] = stx_dash__greaterthan_datum;
_that["Loc"] = Loc;
_that["make_dash_Loc"] = make_dash_Loc;
_that["Loc_question_"] = Loc_question_;
_that["Loc_dash_offset"] = Loc_dash_offset;
_that["Loc_dash_line"] = Loc_dash_line;
_that["Loc_dash_column"] = Loc_dash_column;
_that["Loc_dash_span"] = Loc_dash_span;
_that["Loc_dash_id"] = Loc_dash_id;
_that["set_dash_Loc_dash_offset_bang_"] = set_dash_Loc_dash_offset_bang_;
_that["set_dash_Loc_dash_line_bang_"] = set_dash_Loc_dash_line_bang_;
_that["set_dash_Loc_dash_column_bang_"] = set_dash_Loc_dash_column_bang_;
_that["set_dash_Loc_dash_span_bang_"] = set_dash_Loc_dash_span_bang_;
_that["set_dash_Loc_dash_id_bang_"] = set_dash_Loc_dash_id_bang_;
})();})(this);
