var main = {};


(function() {

var listener = {};

listener.orientUpdate = function(azimuth, pitch, roll) {
  org.plt.WorldKernel.updateWorld(function(w) {
     return org.plt.WorldKernel.config.onOrientChange(w, azimuth, pitch, roll);
  })
};

listener.accelUpdate = function(x, y, z) {
  org.plt.WorldKernel.updateWorld(function(w) {
    return org.plt.WorldKernel.config.onAccelChange(w, x, y, z);
  })
};

main.startup = function() {

<<ON-START>>
};

main.shutdown = function() {
<<ON-PAUSE>>
};


main.destroy = function() {
<<ON-DESTROY>>
};


// Waits until all images are loaded, after which we
// evaluate the after thunk.
main.afterPreloadImages = function(after) {
  var imagePaths = <<IMAGES>>;
  var images = [];
  function wait(predicate, after) {
      if (predicate()) 
	  after();
      else
	  setTimeout(function() { wait(predicate, after); },
		     100);
  }

  function isAllLoaded() {
      var i;
      for (i = 0; i < images.length; i++) {
	  if (! (images[i].isLoaded)) {
	      return false;
	  }
      }
      return true;
  }

  var i;
  for (i = 0; i < imagePaths.length; i++) {
      images.push(org.plt.WorldKernel._kernelCreateImage
		  (org.plt.types.String.makeInstance(imagePaths[i])));
  }
  wait(isAllLoaded, after);
};


main.runToplevel = function() {
   (<<PROGRAM-TOPLEVEL-EXPRESSIONS>>)(org.plt.Kernel.identity);
};

<<PROGRAM-DEFINITIONS>>



})();
