* Image transparency isn't being done during image lifting.  This
  might be a problem in DrScheme itself, as pure white is being
  treated as the transparent color, which is the wrong approach: we
  should be using alpha transparency throughout.

* The test case org.plt.TestKernel.testBigExp is failing because
  our current approach always converts to floating point.

* BigInteger literals aren't being handled in beginner-to-java.

* Name mangling doesn't handle java keywords.  A defined variable
  named "long", for example, breaks the compiler.

* Functions that are recursive can trigger an effective stack
  overflow, manifested as an exception in android.view.ViewRoot.draw.
  Run the sketch test program for some period of time, and the error
  should mainfest.

* The performance of the world primitives is poor on the Android
  platform.  This may be due to the way we hold the image graph
  structure rather than a cached version of the final image, but there
  may be other sources of latency.

* If a program is restarted, all of the toplevel expressions should be
reevaluated.  This affects things like initial worlds that contain
random values.  This means that the toplevel expressions shouldn't be
in a static block in our translation, but in a constructor.


* When an Android program is finished, the on-tick handler thread
should be killed.  At the moment, it isn't.
