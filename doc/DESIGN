We have two problem statements:

   1.  Given existing world program, port it to the cell-phone,
preserving as much as we can.  The original world program is written
with a particular hard-coded screen size in mind, and we want to
translate the intent of that screen size to these smaller devices.

   2.  Provide an environment for creating new programs that use the
world paradigm, but with an aim specifically for cell-phone app
development.  We want to make it easy to write new programs for J2ME
and Android, using world.ss as a starting point, but not necessarily
limiting ourselves only to world.ss.  In essence, we're making a new
programming environment for cell phones, so worrying about the scaling
issue isn't even an issue, since users will be targetting the right
screen size in the first place.

We've been working on problem #1, but #2 is the direction for future
development. We want to expose location-service and other android
behavior, which implies extending the world teachpack toward
cell-phone development.



----------------------------------------------------------------------

[rough notes: cleanup]

big bang width/height arguments are superfluous.

The same redundancy in the arguments to big-bang applies both to the
gui-world and the cellphone-world.

In the cellphone situation, we do need to get the dimensions of the
scenes in order to determine portrait-vs-landscape layout at runtime.
If we assume that the scenes produced by the world->scene function all
are the same size, we can take the scene produced by (world->scene
world0) to determine the appropriate layout.


----------------------------------------------------------------------


Deviation: strings are currently immutable in Moby.  Beginner-level
programs are functional, and in particular, there are no string
mutators, so this deviation shouldn't be visible.


----------------------------------------------------------------------

We should be very careful to avoid behavior that charges uses.  Under
no circumstance should we do data-roaming by default.

http://www.engadget.com/2008/12/10/t-mobile-produces-official-statement-regarding-international-g1/
